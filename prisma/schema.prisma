// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                Int       @id @default(autoincrement())
  nome              String
  nomeUsuario       String    @unique
  email             String    @unique
  senha             String
  nascimento        Int
  idade             Int
  entrouEm          DateTime  @default(now())
  escritor          Boolean   @default(false) // Indica se o usuário é escritor
  livrosFavoritos   Favorito[]
  avaliacoes        Avaliacao[]
  livrosEscritos    Livro[]    @relation("LivrosDoEscritor") // Relacionamento com livros escritos
}

model Livro {
  id                Int       @id @default(autoincrement())
  titulo            String
  anoLancamento     Int
  autor             String
  descricao         String
  mediaPreco        Float
  imagem            String
  genero            String
  dificuldade       Dificuldade
  temAdaptacao      Boolean
  numeroPaginas     Int
  avaliacoes        Avaliacao[]
  favoritos         Favorito[]
  escritorId        Int?       // ID do escritor (opcional, pois nem todos os livros têm um escritor associado)
  escritor          Usuario?   @relation("LivrosDoEscritor", fields: [escritorId], references: [id])
}

model Favorito {
  id                Int       @id @default(autoincrement())
  usuarioId         Int
  livroId           Int
  status            StatusLeitura
  usuario           Usuario      @relation(fields: [usuarioId], references: [id])
  livro             Livro        @relation(fields: [livroId], references: [id])
}

model Avaliacao {
  id                Int       @id @default(autoincrement())
  usuarioId         Int
  livroId           Int
  avaliacao         Int       @default(0)
  comentario        String?
  usuario           Usuario      @relation(fields: [usuarioId], references: [id])
  livro             Livro        @relation(fields: [livroId], references: [id])
}

enum Dificuldade {
  BAIXA
  MEDIA
  ALTA
}

enum StatusLeitura {
  LENDO
  VOU_LER
  LIDO
}